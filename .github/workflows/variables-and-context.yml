# A workflow that demonstrates GitHub context, outputs, and environment variables
name: Variables and Context

# Trigger: run manually from GitHub UI
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        default: 'World'
        required: true

# Workflow-level environment variables (available to all jobs)
env:
  VAR1: myworkflowvar1
  VAR2: myworkflowvar2
  VAR3: myworkflowvar3

jobs:

  job1:                       # Job 1 - show GitHub context
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}   # Convert context object to JSON
        run: echo "$GITHUB_CONTEXT"              # Print it to logs

  job2:                       # Job 2 - demonstrate step and job outputs
    runs-on: ubuntu-latest
    outputs:                  # Job-level outputs (exposed to other jobs)
      output1: ${{ steps.step1.outputs.step1value }}
      output2: ${{ steps.step2.outputs.step2value }}
    steps:
      - name: Step 1
        id: step1             # Step ID so we can reference it later
        run: echo "step1value=hello" >> $GITHUB_OUTPUT   # Create step output

      - name: Step 2
        id: step2
        run: echo "step2value=world" >> $GITHUB_OUTPUT   # Create step output

  job3:                       # Job 3 - consume outputs from Job 2
    runs-on: ubuntu-latest
    needs: job2               # Must wait for job2 to finish
    steps:
      - run: echo ${{ needs.job2.outputs.output1 }} ${{ needs.job2.outputs.output2 }}
        # Should print "hello world"

  job4:                       # Job 4 - environment variable precedence
    runs-on: ubuntu-latest
    env:                      # Job-level variables (override workflow-level ones)
      VAR2: myjobvar2
      VAR3: myjobvar3
    steps:
      - run: |
          echo $VAR1          # Workflow-level variable
          echo ${{ env.VAR1 }} # Another way to access env variables

          echo ""

          echo $VAR2          # Job-level variable overrides workflow-level
          echo $VAR3          # Step-level variable (defined below) overrides job-level
        env: 
          VAR3: mystepvar3    # Step-level variable (highest precedence)
